"use client";

import { useEffect, useState } from "react";
import { useAuthStore } from "@/lib/store/authStore";
import { checkSession, getMe } from "@/lib/api/clientApi";
import Loader from "@/components/Loader/Loader";
import type { User } from "@/types/user";

/**
 * AuthProvider ‚Äî –≥–ª–æ–±–∞–ª—å–Ω–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç, —è–∫–∏–π –ø–µ—Ä–µ–≤—ñ—Ä—è—î,
 * —á–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π —ñ –∑–±–µ—Ä—ñ–≥–∞—î –π–æ–≥–æ —É Zustand.
 * –ü–æ–∫–∞–∑—É—î Loader –ø—ñ–¥ —á–∞—Å –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏.
 */
export default function AuthProvider({
  children,
}: {
  children: React.ReactNode;
}) {
  const { setUser, clearIsAuthenticated } = useAuthStore();
  const [isChecking, setIsChecking] = useState(true);

  useEffect(() => {
    const verifySession = async () => {
      try {
        // üîπ 1. –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —î –∞–∫—Ç–∏–≤–Ω–∞ —Å–µ—Å—ñ—è (–∫—É–∫–∏ —Ç–æ–∫–µ–Ω—ñ–≤)
        const isValid = await checkSession();

        if (isValid) {
          // üîπ 2. –Ø–∫—â–æ —Å–µ—Å—ñ—è –¥—ñ–π—Å–Ω–∞ ‚Äî –æ—Ç—Ä–∏–º—É—î–º–æ –¥–∞–Ω—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
          const user: User = await getMe();

          setUser({
            ...user,
            avatar: user.avatar ?? "",
          });
        } else {
          // üî∏ –Ø–∫—â–æ —Å–µ—Å—ñ—ó –Ω–µ–º–∞—î ‚Äî –æ—á–∏—â–∞—î–º–æ —Å—Ç–∞–Ω
          clearIsAuthenticated();
        }
      } catch (error) {
        console.error("AuthProvider verifySession error:", error);
        clearIsAuthenticated();
      } finally {
        setIsChecking(false);
      }
    };

    verifySession();
  }, [setUser, clearIsAuthenticated]);

  // üîπ Loader –ø—ñ–¥ —á–∞—Å –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
  if (isChecking) {
    return (
      <div
        style={{
          display: "flex",
          justifyContent: "center",
          alignItems: "center",
          minHeight: "100vh",
        }}
      >
        <Loader />
      </div>
    );
  }

  // üîπ –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ –¥—ñ—Ç–µ–π –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ—ó –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
  return <>{children}</>;
}
